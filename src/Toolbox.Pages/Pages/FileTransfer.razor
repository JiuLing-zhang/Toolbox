@page "/file-transfer"

@inject NavigationManager NavigationManager

<PageTitle>码术 - 文件传输</PageTitle>

<MudPaper Width="100%" Elevation="0">
    <MudContainer MaxWidth="MaxWidth.Small">
        <MudPaper Width="100%"
                  Square="true"
                  Class="pa-5 mt-10 d-flex flex-column align-center">
            <MudText>点对点文件传输</MudText>

            <MudTextField @bind-Value="RoomId"
                          Class="mt-10"
                          T="string"
                          Label="请输入6位数字的房间号"
                          Variant="Variant.Text" />
            <MudButtonGroup Color="Color.Info"
                            Class="mt-4"
                            Variant="Variant.Filled">
                <MudButton OnClick="@(async () => await GotoSenderPageAsync())">创建</MudButton>
                <MudButton OnClick="@(async () => await GotoReceiverPageAsync())">加入</MudButton>
            </MudButtonGroup>
        </MudPaper>
    </MudContainer>
</MudPaper>
@code
{
    public string RoomId { get; set; } = JiuLing.CommonLibs.RandomUtils.GetOneByLength(6);
    private async Task GotoSenderPageAsync()
    {
        if (await CheckRoomIdAsync())
        {
            NavigationManager.NavigateTo($"/file-transfer/sender/{RoomId}");
        }
    }
    private async Task GotoReceiverPageAsync()
    {
        if (await CheckRoomIdAsync())
        {
            NavigationManager.NavigateTo($"/file-transfer/receiver/{RoomId}");
        }
    }

    private Task<bool> CheckRoomIdAsync()
    {
        int roomId;
        if (!int.TryParse(RoomId, out roomId))
        {
            return Task.FromResult(false);
        }
        if (roomId < 100000 || roomId > 999999)
        {
            return Task.FromResult(false);
        }
        return Task.FromResult(true);
    }
}
